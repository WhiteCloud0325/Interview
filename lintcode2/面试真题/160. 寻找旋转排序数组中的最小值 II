描述
假设一个旋转排序的数组其起始位置是未知的（比如0 1 2 4 5 6 7 可能变成是4 5 6 7 0 1 2）。

你需要找到其中最小的元素。

数组中可能存在重复的元素。
样例
给出[4,4,5,6,7,0,1,2]  返回 0

Answer: 寻找旋转排序数组中的最小值 I做法相同，比较nums[mid]和nums[right],因为有重复元素，只需要先比较
        nums[left]和nums[right]，left++去掉重复元素
class Solution {
public:
    /**
     * @param nums: a rotated sorted array
     * @return: the minimum number in the array
     */
    int findMin(vector<int> &nums) {
        // write your code here
        if(nums.empty()){
            return -1;
        }
        int left = 0, right  = nums.size()-1, mid = 0;
        while(left < right){
            if(nums[left] == nums[right]){
                ++left;
                continue;
            }
            mid =  left + (right-left)/2;
            if(nums[mid] > nums[right]){
                left = mid +1;
            }
            else{
                right = mid;
            }
        }
        return nums[left];
    }
};
