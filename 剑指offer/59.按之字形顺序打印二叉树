题目描述
请实现一个函数按照之字形打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右至左的顺序打印，第三行按照从左到右的顺序打印，其他行以此类推。

Answer:
BFS
vector<vector<int> > Print(TreeNode* pRoot) {
	queue<TreeNode*> fifoQ;
	vector<vector<int>> res;
	if(!pRoot) return res;
	fifoQ.push(pRoot);
	bool flag=false;
	while(!fifoQ.empty()){
		int len=fifoQ.size();
		vector<int> tmp=vector<int>();
		for(int i=0;i<len;i++){
			TreeNode *node=fifoQ.front();
			fifoQ.pop();
			tmp.push_back(node->val);
			if(node->left) fifoQ.push(node->left);
			if(node->right) fifoQ.push(node->right);
		}
		if(flag) reverse(tmp.begin(),tmp.end());
		flag=!flag;
		res.push_back(tmp);
	}
	return res;
}