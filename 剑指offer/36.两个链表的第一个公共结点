题目描述
输入两个链表，找出它们的第一个公共结点。

Answer：
分析：hash
ListNode* FindFirstCommonNode( ListNode* pHead1, ListNode* pHead2) {
	unordered_map<ListNode*,int> hash_map;
	ListNode *cur=pHead1;
	while(cur){
		hash_map[cur]=cur->val;
		cur=cur->next;
	}
	cur=pHead2;
	while(cur){
		if(hash_map.find(cur)!=hash_map.end())
			return cur;
		cur=cur->next;
	}
	return NULL;
	
}

Answer2:因为是单向指针且只有一个next所以，两个链表呈Y字型，首先遍历两个链表获取长度，长的链表先走到两个链表长度相同，然后一起遍历，直到结点相同返回
ListNode* FindFirstCommonNode( ListNode* pHead1, ListNode* pHead2) {
	int len1=0,len2=0;
	ListNode *cur1=pHead1,*cur2=pHead2;
	while(cur1 || cur2){
		if(cur1){
			++len1;
			cur1=cur1->next;
		}
		if(cur2){
			++len2;
			cur2=cur2->next;
		}
	}
	cur1=pHead1;
	cur2=pHead2;
	if(len1>=len2){
		while(len1>len2){
			cur1=cur1->next;
			--len1;
		}
	}
	else{
		while(len2>len1){
			cur2=cur2->next;
			--len2;
		}
	}
	while(cur1 && cur2){
		if(cur1 == cur2) return cur1;
		cur1=cur1->next;
		cur2=cur2->next;
	}
	return NULL;
}