题目描述
给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。

Answer:
分析：如果pNode存在右子结点，则下一个结点是右子结点的最左结点(如果不存在则是它本身)
	  如果pNode不存在右子节点,则是所在子树是父结点的左子树，父结点是下一个结点
/*
struct TreeLinkNode {
    int val;
    struct TreeLinkNode *left;
    struct TreeLinkNode *right;
    struct TreeLinkNode *next;
    TreeLinkNode(int x) :val(x), left(NULL), right(NULL), next(NULL) {
        
    }
};
*/
class Solution {
public:
    TreeLinkNode* GetNext(TreeLinkNode* pNode)
    {
        if(pNode==NULL) return NULL;
        if(pNode->right){
            TreeLinkNode *node=pNode->right;
            while(node->left){
                node=node->left;
            }
            return node;
        }
        else{
            TreeLinkNode *parent=pNode->next;
            while(parent && parent->right==pNode){
                pNode=parent;
                parent=pNode->next;
            }
            return parent;
        }
    }
};