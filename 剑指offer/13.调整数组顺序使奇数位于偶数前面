题目描述
输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于位于数组的后半部分，
并保证奇数和奇数，偶数和偶数之间的相对位置不变。

Answer:因为要保证稳定性即相对位置不变，使用类似冒泡排序，第一层循环i从n-1到0，遇到偶数将偶数位置与之后的奇数依次换位
class Solution {
public:
    void reOrderArray(vector<int> &array) {
         int i=array.size()-1,j=0;
        while(i>=0){
            if(array[i] %2 == 0){
                j=i+1;
                while(j<array.size() && array[j] %2 !=0){
                    swap(array[j-1],array[j]);
                    j++;
                }
            }
            --i;
        }
       
    }
};