题目描述
数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。
例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。


Answer:
分析：使用hash_map来记录，如果存在大于一半长度的数字，则只有唯一一个，所以遍历的时候就与长度一半比较，大于则返回数字，循环结束则说明不存在
class Solution {
public:
    int MoreThanHalfNum_Solution(vector<int> numbers) {
        unordered_map<int,int> hash_map;
        int len=numbers.size();
        len=len/2;
        for(auto i:numbers){
            hash_map[i]++;
            if(hash_map[i]>len) 
                return i;
        }
        return 0;

    }
};

