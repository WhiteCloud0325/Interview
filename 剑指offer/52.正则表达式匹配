题目描述
请实现一个函数用来匹配包括'.'和'*'的正则表达式。模式中的字符'.'表示任意一个字符，而'*'表示它前面的字符可以出现任意次（包含0次）。 
在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串"aaa"与模式"a.a"和"ab*ac*a"匹配，但是与"aa.a"和"ab*a"均不匹配


Answer:
分析：
i，j表示s前i个字符和p前j个字符匹配结果
if(p[j-1]=='*'){
	if(p[j-2]='.'或 s[i-1]==p[j-2]) dp[i][j]=dp[i-1][j]
	
	或
	dp[i][j]=dp[i][j-2] 表示p[j-2]* 匹配为空
}
else{
	if（s[i-1]==p[j-1] || p[j-1]=='.'） dp[i][j]=dp[i-1][j-1];
}
//s是匹配串，p是模式串，动态规划解法
bool isMatch(string s, string p) {
	int m=s.length(),n=p.length();
	vector<vector<bool>> res(m+1,vector<bool>(n+1,false));
	res[0][0]=true;
	for(int i=0;i<=m;i++){
		for(int j=1;j<=n;j++){
			if(p[j-1]=='*')
				res[i][j]=(i>0 && res[i-1][j]&&(p[j-2]=='.'||s[i-1]==p[j-2])) || res[i][j-2];
			else
				res[i][j]=i>0 &&(s[i - 1] == p[j - 1] || p[j - 1] == '.')&&res[i-1][j-1];
		}
	}
	return res[m][n];
}