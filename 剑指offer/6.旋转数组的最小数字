题目描述
把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。 
例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 
NOTE：给出的所有元素都大于0，若数组大小为0，请返回0


Answer1:因为是旋转数组所以当A[i]<A[i-1]说明是最小元素
class Solution {
public:
    int minNumberInRotateArray(vector<int> rotateArray) {
        if(rotateArray.empty()) return 0;
        for(int i=1;i<rotateArray.size();i++){
            if(rotateArray[i]<rotateArray[i-1]) return rotateArray[i];
        }
        return rotateArray[0];
    }
};


Answer2：使用two pointers 方法，从两边同时查询，i从left，if rotateArray[i]<rotateArray[i-1] ,rotateArray[i]是最小值
												j从right，if rotateArray[j]<rotateArray[j-1]，rotateArray[j]是最小值
class Solution {
public:
    int minNumberInRotateArray(vector<int> rotateArray) {
        if(rotateArray.empty()) return 0;
        int i=1,j=rotateArray.size()-1;
        while(i<=j){
            if(rotateArray[i]<rotateArray[i-1]) return rotateArray[i];
            if(rotateArray[j]<rotateArray[j-1]) return rotateArray[j];
            i++;
            j--;
        }
        return rotateArray[0];
    }
};