题目描述
一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法


最简单的动态规划题目
状态方程: dp[i]=dp[i-1]+dp[i-2]，注意初始条件dp[0]=1,dp[1]=1;也可以看成是斐波那契数列

Answer1: 时间O(n),空间O(n)
class Solution {
public:
    int jumpFloor(int number) {
        if(0 == number) return 0;
        if(1 == number) return 1;
        vector<int> dp(number+1,0);
        dp[0]=1;
        dp[1]=1;
        for(int i=2;i<=number;i++){
            dp[i]=dp[i-1]+dp[i-2];
        }
        return dp[number];
    }
};

Answer2：时间O(n)，空间O(1)
class Solution {
public:
    int jumpFloor(int number) {
        if(0 == number) return 0;
        if(1 == number) return 1;
        vector<int> dp(number+1,0);
        int a=1,b=1,temp=0;
        for(int i=2;i<=number;i++){
            temp=a+b;
            a=b;
            b=temp;
        }
        return temp;
    }
};
