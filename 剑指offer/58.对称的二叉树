题目描述
请实现一个函数，用来判断一颗二叉树是不是对称的。注意，如果一个二叉树同此二叉树的镜像是同样的，定义其为对称的

Answer:深度优先搜索
/*
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};
*/
class Solution {
public:
    bool isSymmetrical(TreeNode* pRoot)
    {
        if(pRoot == NULL) return true;
        return depthSearch(pRoot->left,pRoot->right);
    }
    bool depthSearch(TreeNode *pLeft,TreeNode *pRight){
        if(pLeft==NULL && pRight==NULL) 
            return true;
        else if(pLeft==NULL || pRight==NULL)
            return false;
        else{
            if(pLeft->val==pRight->val)
                return depthSearch(pLeft->left,pRight->right) && depthSearch(pLeft->right,pRight->left);
            else
                return false;
        }
    }

};
