描述
给定一个整数数组（下标从 0 到 n-1， n 表示整个数组的规模），请找出该数组中的最长上升连续子序列。（最长上升连续子序列可以定义为从右到左或从左到右的序列。）
样例
给定 [5, 4, 2, 1, 3], 其最长上升连续子序列（LICS）为 [5, 4, 2, 1], 返回 4.

给定 [5, 1, 2, 3, 4], 其最长上升连续子序列（LICS）为 [1, 2, 3, 4], 返回 4.

注：题意有问题，应该最长上升子串，

Answer:
class Solution {
public:
    /**
     * @param A: An array of Integer
     * @return: an integer
     */
    int longestIncreasingContinuousSubsequence(vector<int> &A) {
        // write your code here
        if(A.empty()){
            return 0;
        }
        int up_dp = 1, down_dp = 1, res = 1;
        for(int i = 1; i < A.size(); ++i){
            if(A[i] > A[i-1]){
                up_dp+=1;
            }
            else{
                up_dp = 1;
            }
            
            if(A[i] < A[i-1] ){
                down_dp +=1;
            } 
            else{
                down_dp = 1;
            }
            res = max(res, max(up_dp, down_dp));
        }
        return res;
    }
};
