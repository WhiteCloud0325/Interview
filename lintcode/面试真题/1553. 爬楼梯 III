描述
小明准备爬上一个n个台阶的楼梯，当他位于第i级台阶时，他可以往上走1至num[i]级台阶。问小明有多少种爬完楼梯的方法？由于答案可能会很大，所以返回答案对1e9+7取模即可。
1 <= n <= 10^6
1 <= num[i] <=10^6
At first, Ming was at the 0th step and he needed to go to the nth step.

样例
给出 n=2,num=[2,2]，返回2

解释:
可以走两次1级台阶，也可以在第0级台阶时一次走2级台阶
给出 n=3,num=[3,2,1]，返回4

解释:
方案一：在第0级台阶时往上走3级
方案二：在第0级台阶时往上走1级，在第1级台阶时往上走2级
方案三：在第0级台阶时往上走1级，在第1级台阶时往上走1级，在第2级台阶时往上走1级
方案四：在第0级台阶时往上走2级，在第2级台阶时往上走1级
给出 n=4,num=[1,1,1,1]，返回1

解释:
只能每次都只走1级楼梯，所以只有1种方案
long long Solve(int n, vector<int> &num) {
    // Write your code here
    int mod = 1000000007;
    int size = num.size();
    int dp[size+2] = {0};
    int res = 0;
    dp[0]=1;
    dp[1] = -1;
    for( int i = 0; i<size; i++){
        res = (dp[i] + res) % mod;
        int l = i+1;
        int r = min(size+1, i+num[i]+1);
        dp[l] = (res + dp[l]) %mod;
        dp[r] = (dp[r] - res + mod) % mod;
    }
    return (dp[size]+res)%mod;
}
