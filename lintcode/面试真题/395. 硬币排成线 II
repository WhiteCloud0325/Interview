描述
有 n 个不同价值的硬币排成一条线。两个参赛者轮流从左边依次拿走 1 或 2 个硬币，直到没有硬币为止。计算两个人分别拿到的硬币总价值，价值高的人获胜。

请判定 第一个玩家 是输还是赢？
样例
给定数组 A = [1,2,2], 返回 true.

给定数组 A = [1,2,4], 返回 false.
Answer:
bool firstWillWin(vector<int> &values) {
    // write your code here
    int n = values.size();
    if( n <=2){
        return true;
    }
    vector<int> dp(n, 0);
    vector<bool> flag(n, false);
    int total = 0;
    dp[0] = values[0];
    total = dp[1] = values[0] + values[1];
    flag[0] = flag[1] = true;
    for(int i =2; i < n; ++i){
        total += values[i];
        if(flag[i-1]){
            if(!flag[i-2] && (dp[i-2]+values[i] > dp[i-1])){
                dp[i] = dp[i-2] + values[i];
                flag[i] = true;
            }
            else{
                dp[i] = dp[i-1];
                flag[i] = false;
            }
        }
        else{
            dp[i] = dp[i-1] + values[i];
            flag[i] = true;
        }
    }
    if(dp[n-1] >= total/2+1){ //注意判断条件，要有等号和+1
        return true;
    }
    else{
        return false;
    }
}
