描述
在一条环路上有 N 个加油站，其中第 i 个加油站有汽油gas[i]，并且从第_i_个加油站前往第_i_+1个加油站需要消耗汽油cost[i]。

你有一辆油箱容量无限大的汽车，现在要从某一个加油站出发绕环路一周，一开始油箱为空。

求可环绕环路一周时出发的加油站的编号，若不存在环绕一周的方案，则返回-1。

数据保证答案唯一。
样例
现在有4个加油站，汽油量gas[i]=[1, 1, 3, 1]，环路旅行时消耗的汽油量cost[i]=[2, 2, 1, 1]。则出发的加油站的编号为2。

挑战
O(n)时间和O(1)额外空间
Answer:
int canCompleteCircuit(vector<int> &gas, vector<int> &cost) {
    // write your code here
    int n = gas.size();
    int sum1= 0, sum2 = 0, cur = 0;
    int pos = 0, res = 0;
    for (int i = 1; i <n; ++i) {
        sum1 += gas[i];
        sum2 += cost[i];
        cur -= cost[i - 1];
        if (cur < res) {
            pos = i;
            res = cur;
        }
        cur +=gas[i];
    }
    cur -= cost[n - 1];
    sum1 += gas[0];
    sum2 += cost[0];
    if (cur < res) {

        pos = 0;
    }
    if (sum1 < sum2) {
        return -1;
    }
    else {
        return pos;
    }
}
