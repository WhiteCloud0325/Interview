描述
设计一种方式检查一个链表是否为回文链表。
样例
1->2->1 就是一个回文链表。
挑战
O(n)的时间和O(1)的额外空间.
Answer: 快慢指针找到后一半链表，对后一半链表进行翻转，然后和前一半比较
class Solution {
public:
    /**
     * @param head: A ListNode.
     * @return: A boolean.
     */
    bool isPalindrome(ListNode * head) {
        // write your code here
        if (head == NULL || head->next == NULL) {
            return true;
        }
        ListNode *fast = head, *slow = head;
        while (fast->next && fast->next->next) { //循环不等式条件 ，奇数个slow指向中间的node，偶数个指向，前一半最后一个node
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode *pre = NULL, *cur = slow->next, *next = NULL;
        while (cur) {
            next = cur->next;
            cur->next = pre;
            pre = cur;
            cur = next;
        }
        slow->next = pre;
        ListNode* node1 = head, * node2 = slow->next;
        while (node2) {
            if(node2->val != node1->val) {
                return false;
            }
            node1 = node1->next;
            node2 = node2->next;
        }
        return true;
    }
}
