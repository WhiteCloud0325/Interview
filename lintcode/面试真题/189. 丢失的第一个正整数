描述
给出一个无序的整数数组，找出其中没有出现的最小正整数。
样例
如果给出 [1,2,0], return 3
如果给出 [3,4,-1,1], return 2

挑战
只允许时间复杂度O(n)的算法，并且只能使用常数级别的空间。

Answer:
int firstMissingPositive(vector<int> &A) {
    // write your code here
    for (int i = 0; i < A.size(); ++i) {
        if (A[i] == i + 1) {
            continue;
        }
        int temp = A[i];
        while (temp >=1 && temp <= A.size() && A[temp - 1]  != temp) {
            swap(A[temp - 1], temp);
        }

    }
    for (int i = 0; i < A.size(); ++i) {
        if (A[i] != i + 1) {
            return i + 1;
        }
    }
    return A.size() + 1;
}
