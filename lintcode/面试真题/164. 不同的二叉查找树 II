描述
给出n，生成所有由1...n为节点组成的不同的二叉查找树

样例
给出n = 3，生成所有5种不同形态的二叉查找树：

1         3     3       2    1
 \       /     /       / \    \
  3     2     1       1   3    2
 /     /       \                \
2     1         2                3

Answer:
class Solution {
public:
    /**
     * @paramn n: An integer
     * @return: A list of root
     */
    vector<TreeNode *> generateTrees(int n) {
        // write your code here
        vector<TreeNode*> res;
        if(n == 0){
            res.push_back(NULL);
            return res;
        }
        return dfs(1, n);
    }
    vector<TreeNode*> dfs(int start, int end){
        vector<TreeNode*> res;
        if(start < 1 || end < 1 || start > end){
            res.push_back(NULL);
            return res;
        }
        if(start == end){
            res.push_back(new TreeNode(start));
            return res;
        }
        for(int i = start; i <= end; ++i){
            vector<TreeNode*> left_tree = dfs(start, i-1);
            vector<TreeNode*> right_tree = dfs(i+1, end);
            for(auto left_node: left_tree){
                for(auto right_node: right_tree){
                    TreeNode* root = new TreeNode(i);
                    root->left = left_node;
                    root->right = right_node;
                    res.push_back(root);
                }
            }
        }
        return res;
    }
};
