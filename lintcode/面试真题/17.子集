描述
给定一个含不同整数的集合，返回其所有的子集
子集中的元素排列必须是非降序的，解集必须不包含重复的子集
描述
给定一个含不同整数的集合，返回其所有的子集
子集中的元素排列必须是非降序的，解集必须不包含重复的子集
您在真实的面试中是否遇到过这个题？  是
样例
如果 S = [1,2,3]，有如下的解：

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
挑战
你可以同时用递归与非递归的方式解决么？

Answer1：非递归，思路，子集数不相同，集合大小为n，则 子集数目为 2^n个，可以把每个数看见一个bit位，i从0到
2^n -1 遍历，看i每个bit位是否为1，为1则放到临时的容器里。
class Solution {
public:
    /**
     * @param nums: A set of numbers
     * @return: A list of lists
     */
    vector<vector<int>> subsets(vector<int> &nums) {
        // write your code here
        int n = nums.size();
        vector<vector<int>> res;
        for(uint64_t i=0;i< (1<<n);++i){
            vector<int> temp;
            uint64_t j=i;
            int pos=0;
            while(j){
                if((j & 1) ==1){
                    temp.push_back(nums[pos]);
                }
                j>>=1;
                pos++;
            }
            sort(temp.begin(),temp.end());
            res.push_back(temp);
            
        }
        return res;   
    }
};
