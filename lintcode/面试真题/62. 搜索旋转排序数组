描述
假设有一个排序的按未知的旋转轴旋转的数组(比如，0 1 2 4 5 6 7 可能成为4 5 6 7 0 1 2)。给定一个目标值进行搜索，如果在数组中找到目标值返回数组中的索引位置，否则返回-1。

你可以假设数组中不存在重复的元素。
样例
给出[4, 5, 1, 2, 3]和target=1，返回 2

给出[4, 5, 1, 2, 3]和target=0，返回 -1
挑战
O(logN) time
Answer:
class Solution {
public:
    /**
     * @param A: an integer rotated sorted array
     * @param target: an integer to be searched
     * @return: an integer
     */
    int search(vector<int> &A, int target) {
        // write your code here
        if(A.empty()){
            return -1;
        }
        int res=-1;
        int n=A.size();
        int left=0,right=A.size()-1,mid;
        while(left<=right){
            mid=(left+right)/2;
            if(A[mid] == target){
                return mid;
            }
            else if((target < A[mid]) ^ (target<=A[right]) ^ (A[right]<A[mid])){
                left=mid+1;
            }
            else{
                right=mid-1;
            }
        }
        return -1;
    }
};
