描述
在一个二维01矩阵中找到全为1的最大正方形

样例
1 0 1 0 0
1 0 1 1 1
1 1 1 1 1
1 0 0 1 0
返回 4

Answer:动态规划， dp[i][j] 表示在以矩阵点[i-1][j-1]为正方形右下角点时边长最大值，dp[i][j] = 1+min(dp[i-1][j-1],min(dp[i-1][j],dp[i][j-1]))
  int maxSquare(vector<vector<int>> &matrix) {
      // write your code here
      int m = matrix.size(), n = matrix[0].size();
      vector<vector<int>> dp(m+1, vector<int> (n+1, 0));
      vector<vector<bool>> flag(n+1, vector<bool>(n+1, false));
      int res = 0;
      for(int i = 1; i <= m; ++i){
          for(int j = 1; j <= n; ++j){
              if(matrix[i-1][j-1] == 1){
                  dp[i][j] = 1 + min(dp[i-1][j], min(dp[i][j-1], dp[i-1][j-1]));
              }
              res= max(res, dp[i][j] * dp[i][j]);
          }
      }
      return res;
  }
