描述
给定一个字符串s，将s分割成一些子串，使每个子串都是回文。
返回s符合要求的的最少分割次数。
样例
比如，给出字符串s = "aab"，

返回 1， 因为进行一次分割可以将字符串s分割成["aa","b"]这样两个回文子串

 Answer:动态规划两个中间状态， dp[i] 表示 前i个字符串最少回文子串个数, flag[j][i]表示从j到i子串是否是回文串
        状态方程： 当 s[j-1] == s[i-1] 且 j+1到i-1是回文子串时, dp[i] = min(dp[i], 1 + dp[j-1])
  int minCut(string &s) {
      // write your code here
      if(s.empty()){
          return 0;
      }
      int n =s.size();
      vector<int> dp(n+1, 0);
      vector<vector<bool>> flag(n+1, vector<bool> (n+1, false));
      for(int i = 1; i <= n; ++i){
          dp[i] = INT_MAX;
          for(int j =i; j >= 1; --j){
              if(s[j-1] == s[i-1] && (i - j <=2 || flag[j+1][i-1])){
                  dp[i] = min(dp[i], 1 + dp[j-1]);
                  flag[j][i] = true;
              }
          }
      }
      return dp[n]-1;
  }
