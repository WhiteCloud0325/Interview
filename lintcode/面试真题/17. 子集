描述
给定一个含不同整数的集合，返回其所有的子集
样例
如果 S = [1,2,3]，有如下的解：

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
挑战
你可以同时用递归与非递归的方式解决么？
Answer1:
class Solution {
public:
    /**
     * @param nums: A set of numbers
     * @return: A list of lists
     */
    vector<vector<int>> subsets(vector<int> &nums) {
        // write your code here
        int n = nums.size();
        sort(nums.begin(),nums.end());
        vector<vector<int>> res;
        res.push_back(vector<int>());
        for(int i=0;i<n;++i){
            int m=res.size();
            for(int j=0;j<m;j++){
                vector<int> temp = res[j];
                temp.push_back(nums[i]);
                res.push_back(temp);
            }
        }
        return res;
    }
};
