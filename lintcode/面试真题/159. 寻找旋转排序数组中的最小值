描述
假设一个旋转排序的数组其起始位置是未知的（比如0 1 2 4 5 6 7 可能变成是4 5 6 7 0 1 2）。

你需要找到其中最小的元素。

你可以假设数组中不存在重复的元素。
样例
给出[4,5,6,7,0,1,2]  返回 0
Answer:
class Solution {
public:
    /**
     * @param nums: a rotated sorted array
     * @return: the minimum number in the array
     */
    int findMin(vector<int> &nums) {
        // write your code here
        if(nums.empty()){
            return -1;
        }
        if(nums.size() ==1 ){
            return nums[0];
        }
        int n = nums.size();
        int left = 0, right = n-1, mid = 0;
        while(left < right){
            mid = left + (right - left)/2;
            if(nums[mid] > nums[right]){
                left= mid + 1;
            }
            else{
                right = mid;
            }
        }
        return nums[left];
    }
};
