描述
Ming went out to buy a drink at noon. On the way to the trash can, he passed a public parking lot. Because of the programmer's professional habits, he would like to know how much the parking lot is maximizing utilization in the morning.
After communicating with the uncle of the guard, he obtained a record of the vehicle arrival time and playing time of the parking lot in the morning (data format reference sample input).
Can you write a function through the data you get to help Ming calculate this parking lot. How many cars are parked at the same time in the morning?
为方便起见，简化计算，驶入时间和开出时间以整点记录，如9点，10点
如停车记录中入场时间晚于出场时间，该停车记录视为无效，如[7,3]
假定如果有多辆车同时出入场，出场车辆优先
停车记录数不超过100000100000，时间点不超过1e91e9

样例
Given a = [[8,9],[4,6],[3,7],[6,8]], return 2.

Explanation:
There are 2 cars in the parking lot at [4, 6] or [6, 7], 
and at most 1 car in the rest of the time.`
Given a = [[1,2],[2,3],[3,4],[4,5]] , return 1。

Explanation:
Whenever one car is driven out, another car comes in again, up to one car.

Answer:双指针，两个数组分别存到达时间和离开时间，当arrival[i] < leave[j] ,车数增加， else 车数减少
  int getMax(vector<vector<int>> &a) {
      // Write your code here
      vector<int> arrival, leave;
      for (int i = 0; i < a.size(); ++i) {
          if(a[i][0] < a[i][1]) {
              arrival.push_back(a[i][0]);
              leave.push_back(a[i][1]);
          }
      }
      sort(arrival.begin(), arrival.end());
      sort(leave.begin(), leave.end());
      int i = 0, j = 0;
      int count = 0, res = 0;
      while (i < arrival.size() && j < leave.size()) {
          if (arrival[i] < leave[j]) {
              ++count;
              ++i;
              res = max(res, count);
          }
          else {
              --count;
              ++j;
          }
      }
      return res;
  }
