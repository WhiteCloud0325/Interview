描述
给出一棵二叉树，返回其节点值的锯齿形层次遍历（先从左往右，下一层再从右往左，层与层之间交替进行）
样例
给出一棵二叉树 {3,9,20,#,#,15,7},

    3
   / \
  9  20
    /  \
   15   7
返回其锯齿形的层次遍历为：

[
  [3],
  [20,9],
  [15,7]
]

Answer:
vector<vector<int>> zigzagLevelOrder(TreeNode * root) {
    // write your code here
    vector<vector<int>> res;
    if(!root){
        return res;
    }
    std::queue<TreeNode*> fifoq ;
    bool flag=false;
    fifoq.push(root);
    while(!fifoq.empty()){
        int num=fifoq.size();
        vector<int> layer;
        for(int i=0;i<num;++i){
            TreeNode* node=fifoq.front();
            fifoq.pop();
            layer.push_back(node->val);
            if(node->left){
                fifoq.push(node->left);
            }
            if(node->right){
                fifoq.push(node->right);
            }
        }
        if(flag){
            reverse(layer.begin(),layer.end());
        }
        res.push_back(layer);
        flag=!flag;
    }
    return res;
}
