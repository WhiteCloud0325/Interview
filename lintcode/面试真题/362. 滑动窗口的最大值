描述
给出一个可能包含重复的整数数组，和一个大小为 k 的滑动窗口, 从左到右在数组中滑动这个窗口，找到数组中每个窗口内的最大值。
样例
给出数组 [1,2,7,7,8], 滑动窗口大小为 k = 3. 返回 [7,7,8].

解释：

最开始，窗口的状态如下：

[|1, 2 ,7| ,7 , 8], 最大值为 7;

然后窗口向右移动一位：

[1, |2, 7, 7|, 8], 最大值为 7;

最后窗口再向右移动一位：

[1, 2, |7, 7, 8|], 最大值为 8.
挑战
O(n)时间，O(k)的额外空间
Answer:
vector<int> maxSlidingWindow(vector<int> &nums, int k) {
    // write your code here
    if (k == 1 || nums.empty()) {
        return nums;
    }
    vector<int> res;
    multiset<int, greater<int>> max_heap;
    for (int i = 0; i < k; ++i) {
        max_heap.insert(nums[i]);
    }
    res.push_back(*(max_heap.begin()));
    for (int i = k; i < nums.size(); ++i) {
        auto it1 = max_heap.find(nums[i - k]);
        max_heap.erase(it1);
        max_heap.insert(nums[i]);
        res.push_back(*(max_heap.begin()));
    }
    return res;
}
