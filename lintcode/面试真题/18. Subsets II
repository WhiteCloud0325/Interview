描述
Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).
子集中的每个元素都是非降序的
两个子集间的顺序是无关紧要的
解集中不能包含重复子集
样例
Input: [1,2,2]
Output:

[
  [2],
  [1],
  [1,2,2],
  [2,2],
  [1,2],
  []
]
Answer1:
class Solution {
public:
    /**
     * @param nums: A set of numbers.
     * @return: A list of lists. All valid subsets.
     */
    vector<vector<int>> subsetsWithDup(vector<int> &nums) {
        // write your code here
        sort(nums.begin(),nums.end());
        vector<vector<int>> res;
        res.push_back(vector<int>());
        int cur=0,last=0,start=0;
        for(int i=0;i<nums.size();++i){
            int cur=res.size();
            start=0;
            if(i>0 && nums[i-1] == nums[i]){
                start=last;
            }
            last=cur;
            for(;start<cur;++start){
                vector<int> temp=res[start];
                temp.push_back(nums[i]);
                res.push_back(temp);
            }
        }
        return res;
    }
};
